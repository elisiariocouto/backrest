{"mappings":"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","sources":["<anon>","src/views/GettingStartedGuide.tsx","node_modules/antd/es/divider/index.js","node_modules/antd/es/divider/style/index.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    var parcelRequire = $parcel$global[\"parcelRequire233b\"];\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"evUGJ\", function(module, exports) {\n\n$parcel$export(module.exports, \"GettingStartedGuide\", () => $69ab34cb3d532cd9$export$f29728e89ea0a4d3);\n\nvar $ayMG0 = parcelRequire(\"ayMG0\");\n\nvar $bAJM4 = parcelRequire(\"bAJM4\");\nvar $66M8G = parcelRequire(\"66M8G\");\nvar $3liF5 = parcelRequire(\"3liF5\");\nvar $93lJr = parcelRequire(\"93lJr\");\nparcelRequire(\"acw62\");\n\nvar $1VQWV = parcelRequire(\"1VQWV\");\n\nvar $6Os56 = parcelRequire(\"6Os56\");\n\nvar $3xSyo = parcelRequire(\"3xSyo\");\n\nvar $7nu3T = parcelRequire(\"7nu3T\");\nconst $69ab34cb3d532cd9$export$f29728e89ea0a4d3 = ()=>{\n    const config = (0, $1VQWV.useConfig)()[0];\n    return /*#__PURE__*/ (0, $ayMG0.jsx)((0, $ayMG0.Fragment), {\n        children: /*#__PURE__*/ (0, $ayMG0.jsxs)((0, $93lJr.default).Text, {\n            children: [\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"h1\", {\n                    children: \"Getting Started\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)(\"p\", {\n                    children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"a\", {\n                        href: \"https://github.com/garethgeorge/backrest\",\n                        target: \"_blank\",\n                        children: \"Check for new Backrest releases on GitHub\"\n                    })\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)((0, $66M8G.default), {\n                    orientation: \"left\",\n                    children: \"Overview\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"ul\", {\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"li\", {\n                            children: \"Repos map directly to restic repositories, start by configuring your backup locations.\"\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"li\", {\n                            children: \"Plans are where you configure directories to backup, and backup scheduling. Multiple plans can backup to a single restic repository.\"\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"li\", {\n                            children: [\n                                \"See\",\n                                \" \",\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"a\", {\n                                    href: \"https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html\",\n                                    target: \"_blank\",\n                                    children: \"the restic docs on preparing a new repository\"\n                                }),\n                                \" \",\n                                \"for details about available repository types and how they can be configured.\"\n                            ]\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsxs)(\"li\", {\n                            children: [\n                                \"See\",\n                                \" \",\n                                /*#__PURE__*/ (0, $ayMG0.jsx)(\"a\", {\n                                    href: \"https://garethgeorge.github.io/backrest\",\n                                    target: \"_blank\",\n                                    children: \"the Backrest wiki\"\n                                }),\n                                \" \",\n                                \"for instructions on how to configure Backrest.\"\n                            ]\n                        })\n                    ]\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsx)((0, $66M8G.default), {\n                    orientation: \"left\",\n                    children: \"Tips\"\n                }),\n                /*#__PURE__*/ (0, $ayMG0.jsxs)(\"ul\", {\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"li\", {\n                            children: \"Backup your Backrest configuration: your Backrest config holds all of your repos, plans, and the passwords to decrypt them. When you have Backrest configured to your liking make sure to store a copy of your config (or minimally a copy of your passwords) in a safe location e.g. a secure note in your password manager.\"\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)(\"li\", {\n                            children: \"Configure hooks: Backrest can deliver notifications about backup events. It's strongly recommended that you configure an on error hook that will notify you in the event that backups start failing (e.g. an issue with storage or network connectivity). Hooks can be configured either at the plan or repo level.\"\n                        })\n                    ]\n                }),\n                (0, $3xSyo.isDevBuild) && /*#__PURE__*/ (0, $ayMG0.jsxs)((0, $ayMG0.Fragment), {\n                    children: [\n                        /*#__PURE__*/ (0, $ayMG0.jsx)((0, $66M8G.default), {\n                            orientation: \"left\",\n                            children: \"Config View\"\n                        }),\n                        /*#__PURE__*/ (0, $ayMG0.jsx)((0, $bAJM4.default), {\n                            size: \"small\",\n                            items: [\n                                {\n                                    key: \"1\",\n                                    label: \"Config JSON hidden for security\",\n                                    children: config ? /*#__PURE__*/ (0, $ayMG0.jsx)((0, $93lJr.default), {\n                                        children: /*#__PURE__*/ (0, $ayMG0.jsx)(\"pre\", {\n                                            children: (0, $7nu3T.toJsonString)((0, $6Os56.ConfigSchema), config, {\n                                                prettySpaces: 2\n                                            })\n                                        })\n                                    }) : /*#__PURE__*/ (0, $ayMG0.jsx)((0, $3liF5.default), {})\n                                }\n                            ]\n                        })\n                    ]\n                })\n            ]\n        })\n    });\n};\n\n});\nparcelRegister(\"66M8G\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $4728a501f42302e5$export$2e2bcd8739ae039);\n\nvar $acw62 = parcelRequire(\"acw62\");\n\nvar $8g1PZ = parcelRequire(\"8g1PZ\");\n\n\nvar $dRTnM = parcelRequire(\"dRTnM\");\n\nvar $IFe7R = parcelRequire(\"IFe7R\");\n\nvar $ar1xc = parcelRequire(\"ar1xc\");\n\"use client\";\nvar $4728a501f42302e5$var$__rest = undefined && undefined.__rest || function(s, e) {\n    var t = {};\n    for(var p in s)if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\") {\n        for(var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++)if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n    }\n    return t;\n};\nconst $4728a501f42302e5$var$sizeClassNameMap = {\n    small: 'sm',\n    middle: 'md'\n};\nconst $4728a501f42302e5$var$Divider = (props)=>{\n    const { getPrefixCls: getPrefixCls, direction: direction, className: dividerClassName, style: dividerStyle } = (0, $dRTnM.useComponentConfig)('divider');\n    const { prefixCls: customizePrefixCls, type: type = 'horizontal', orientation: orientation = 'center', orientationMargin: orientationMargin, className: className, rootClassName: rootClassName, children: children, dashed: dashed, variant: variant = 'solid', plain: plain, style: style, size: customSize } = props, restProps = $4728a501f42302e5$var$__rest(props, [\n        \"prefixCls\",\n        \"type\",\n        \"orientation\",\n        \"orientationMargin\",\n        \"className\",\n        \"rootClassName\",\n        \"children\",\n        \"dashed\",\n        \"variant\",\n        \"plain\",\n        \"style\",\n        \"size\"\n    ]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const [wrapCSSVar, hashId, cssVarCls] = (0, $ar1xc.default)(prefixCls);\n    const sizeFullName = (0, $IFe7R.default)(customSize);\n    const sizeCls = $4728a501f42302e5$var$sizeClassNameMap[sizeFullName];\n    const hasChildren = !!children;\n    const mergedOrientation = $acw62.useMemo(()=>{\n        if (orientation === 'left') return direction === 'rtl' ? 'end' : 'start';\n        if (orientation === 'right') return direction === 'rtl' ? 'start' : 'end';\n        return orientation;\n    }, [\n        direction,\n        orientation\n    ]);\n    const hasMarginStart = mergedOrientation === 'start' && orientationMargin != null;\n    const hasMarginEnd = mergedOrientation === 'end' && orientationMargin != null;\n    const classString = (0, (/*@__PURE__*/$parcel$interopDefault($8g1PZ)))(prefixCls, dividerClassName, hashId, cssVarCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text`]: hasChildren,\n        [`${prefixCls}-with-text-${mergedOrientation}`]: hasChildren,\n        [`${prefixCls}-dashed`]: !!dashed,\n        [`${prefixCls}-${variant}`]: variant !== 'solid',\n        [`${prefixCls}-plain`]: !!plain,\n        [`${prefixCls}-rtl`]: direction === 'rtl',\n        [`${prefixCls}-no-default-orientation-margin-start`]: hasMarginStart,\n        [`${prefixCls}-no-default-orientation-margin-end`]: hasMarginEnd,\n        [`${prefixCls}-${sizeCls}`]: !!sizeCls\n    }, className, rootClassName);\n    const memoizedOrientationMargin = $acw62.useMemo(()=>{\n        if (typeof orientationMargin === 'number') return orientationMargin;\n        if (/^\\d+$/.test(orientationMargin)) return Number(orientationMargin);\n        return orientationMargin;\n    }, [\n        orientationMargin\n    ]);\n    const innerStyle = {\n        marginInlineStart: hasMarginStart ? memoizedOrientationMargin : undefined,\n        marginInlineEnd: hasMarginEnd ? memoizedOrientationMargin : undefined\n    };\n    return wrapCSSVar(/*#__PURE__*/ $acw62.createElement(\"div\", Object.assign({\n        className: classString,\n        style: Object.assign(Object.assign({}, dividerStyle), style)\n    }, restProps, {\n        role: \"separator\"\n    }), children && type !== 'vertical' && /*#__PURE__*/ $acw62.createElement(\"span\", {\n        className: `${prefixCls}-inner-text`,\n        style: innerStyle\n    }, children)));\n};\nvar $4728a501f42302e5$export$2e2bcd8739ae039 = $4728a501f42302e5$var$Divider;\n\n});\nparcelRegister(\"ar1xc\", function(module, exports) {\n\n$parcel$export(module.exports, \"default\", () => $798d9db240249fbb$export$2e2bcd8739ae039);\n\nvar $3i86m = parcelRequire(\"3i86m\");\n\nvar $670jt = parcelRequire(\"670jt\");\n\nvar $1kAJu = parcelRequire(\"1kAJu\");\nvar $1nWFx = parcelRequire(\"1nWFx\");\n// ============================== Size ================================\nconst $798d9db240249fbb$var$genSizeDividerStyle = (token)=>{\n    const { componentCls: componentCls } = token;\n    return {\n        [componentCls]: {\n            '&-horizontal': {\n                [`&${componentCls}`]: {\n                    '&-sm': {\n                        marginBlock: token.marginXS\n                    },\n                    '&-md': {\n                        marginBlock: token.margin\n                    }\n                }\n            }\n        }\n    };\n};\n// ============================== Shared ==============================\nconst $798d9db240249fbb$var$genSharedDividerStyle = (token)=>{\n    const { componentCls: componentCls, sizePaddingEdgeHorizontal: sizePaddingEdgeHorizontal, colorSplit: colorSplit, lineWidth: lineWidth, textPaddingInline: textPaddingInline, orientationMargin: orientationMargin, verticalMarginInline: verticalMarginInline } = token;\n    return {\n        [componentCls]: Object.assign(Object.assign({}, (0, $670jt.resetComponent)(token)), {\n            borderBlockStart: `${(0, $3i86m.unit)(lineWidth)} solid ${colorSplit}`,\n            // vertical\n            '&-vertical': {\n                position: 'relative',\n                top: '-0.06em',\n                display: 'inline-block',\n                height: '0.9em',\n                marginInline: verticalMarginInline,\n                marginBlock: 0,\n                verticalAlign: 'middle',\n                borderTop: 0,\n                borderInlineStart: `${(0, $3i86m.unit)(lineWidth)} solid ${colorSplit}`\n            },\n            '&-horizontal': {\n                display: 'flex',\n                clear: 'both',\n                width: '100%',\n                minWidth: '100%',\n                // Fix https://github.com/ant-design/ant-design/issues/10914\n                margin: `${(0, $3i86m.unit)(token.marginLG)} 0`\n            },\n            [`&-horizontal${componentCls}-with-text`]: {\n                display: 'flex',\n                alignItems: 'center',\n                margin: `${(0, $3i86m.unit)(token.dividerHorizontalWithTextGutterMargin)} 0`,\n                color: token.colorTextHeading,\n                fontWeight: 500,\n                fontSize: token.fontSizeLG,\n                whiteSpace: 'nowrap',\n                textAlign: 'center',\n                borderBlockStart: `0 ${colorSplit}`,\n                '&::before, &::after': {\n                    position: 'relative',\n                    width: '50%',\n                    borderBlockStart: `${(0, $3i86m.unit)(lineWidth)} solid transparent`,\n                    // Chrome not accept `inherit` in `border-top`\n                    borderBlockStartColor: 'inherit',\n                    borderBlockEnd: 0,\n                    transform: 'translateY(50%)',\n                    content: \"''\"\n                }\n            },\n            [`&-horizontal${componentCls}-with-text-start`]: {\n                '&::before': {\n                    width: `calc(${orientationMargin} * 100%)`\n                },\n                '&::after': {\n                    width: `calc(100% - ${orientationMargin} * 100%)`\n                }\n            },\n            [`&-horizontal${componentCls}-with-text-end`]: {\n                '&::before': {\n                    width: `calc(100% - ${orientationMargin} * 100%)`\n                },\n                '&::after': {\n                    width: `calc(${orientationMargin} * 100%)`\n                }\n            },\n            [`${componentCls}-inner-text`]: {\n                display: 'inline-block',\n                paddingBlock: 0,\n                paddingInline: textPaddingInline\n            },\n            '&-dashed': {\n                background: 'none',\n                borderColor: colorSplit,\n                borderStyle: 'dashed',\n                borderWidth: `${(0, $3i86m.unit)(lineWidth)} 0 0`\n            },\n            [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n                '&::before, &::after': {\n                    borderStyle: 'dashed none none'\n                }\n            },\n            [`&-vertical${componentCls}-dashed`]: {\n                borderInlineStartWidth: lineWidth,\n                borderInlineEnd: 0,\n                borderBlockStart: 0,\n                borderBlockEnd: 0\n            },\n            '&-dotted': {\n                background: 'none',\n                borderColor: colorSplit,\n                borderStyle: 'dotted',\n                borderWidth: `${(0, $3i86m.unit)(lineWidth)} 0 0`\n            },\n            [`&-horizontal${componentCls}-with-text${componentCls}-dotted`]: {\n                '&::before, &::after': {\n                    borderStyle: 'dotted none none'\n                }\n            },\n            [`&-vertical${componentCls}-dotted`]: {\n                borderInlineStartWidth: lineWidth,\n                borderInlineEnd: 0,\n                borderBlockStart: 0,\n                borderBlockEnd: 0\n            },\n            [`&-plain${componentCls}-with-text`]: {\n                color: token.colorText,\n                fontWeight: 'normal',\n                fontSize: token.fontSize\n            },\n            [`&-horizontal${componentCls}-with-text-start${componentCls}-no-default-orientation-margin-start`]: {\n                '&::before': {\n                    width: 0\n                },\n                '&::after': {\n                    width: '100%'\n                },\n                [`${componentCls}-inner-text`]: {\n                    paddingInlineStart: sizePaddingEdgeHorizontal\n                }\n            },\n            [`&-horizontal${componentCls}-with-text-end${componentCls}-no-default-orientation-margin-end`]: {\n                '&::before': {\n                    width: '100%'\n                },\n                '&::after': {\n                    width: 0\n                },\n                [`${componentCls}-inner-text`]: {\n                    paddingInlineEnd: sizePaddingEdgeHorizontal\n                }\n            }\n        })\n    };\n};\nconst $798d9db240249fbb$export$9ca1be8807fe0675 = (token)=>({\n        textPaddingInline: '1em',\n        orientationMargin: 0.05,\n        verticalMarginInline: token.marginXS\n    });\nvar // ============================== Export ==============================\n$798d9db240249fbb$export$2e2bcd8739ae039 = (0, $1kAJu.genStyleHooks)('Divider', (token)=>{\n    const dividerToken = (0, $1nWFx.mergeToken)(token, {\n        dividerHorizontalWithTextGutterMargin: token.margin,\n        sizePaddingEdgeHorizontal: 0\n    });\n    return [\n        $798d9db240249fbb$var$genSharedDividerStyle(dividerToken),\n        $798d9db240249fbb$var$genSizeDividerStyle(dividerToken)\n    ];\n}, $798d9db240249fbb$export$9ca1be8807fe0675, {\n    unitless: {\n        orientationMargin: true\n    }\n});\n\n});\n\n\n\n\n//# sourceMappingURL=GettingStartedGuide.8a6b5014.js.map\n","import { Collapse, Divider, Spin, Typography } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { backrestService } from \"../api\";\nimport { useConfig } from \"../components/ConfigProvider\";\nimport { Config, ConfigSchema } from \"../../gen/ts/v1/config_pb\";\nimport { isDevBuild } from \"../state/buildcfg\";\nimport { toJsonString } from \"@bufbuild/protobuf\";\n\nexport const GettingStartedGuide = () => {\n  const config = useConfig()[0];\n\n  return (\n    <>\n      <Typography.Text>\n        <h1>Getting Started</h1>\n        {/* open link in new tab */}\n        <p>\n          <a href=\"https://github.com/garethgeorge/backrest\" target=\"_blank\">\n            Check for new Backrest releases on GitHub\n          </a>\n        </p>\n        <Divider orientation=\"left\">Overview</Divider>\n        <ul>\n          <li>\n            Repos map directly to restic repositories, start by configuring your\n            backup locations.\n          </li>\n          <li>\n            Plans are where you configure directories to backup, and backup\n            scheduling. Multiple plans can backup to a single restic repository.\n          </li>\n          <li>\n            See{\" \"}\n            <a\n              href=\"https://restic.readthedocs.io/en/latest/030_preparing_a_new_repo.html\"\n              target=\"_blank\"\n            >\n              the restic docs on preparing a new repository\n            </a>{\" \"}\n            for details about available repository types and how they can be\n            configured.\n          </li>\n          <li>\n            See{\" \"}\n            <a href=\"https://garethgeorge.github.io/backrest\" target=\"_blank\">\n              the Backrest wiki\n            </a>{\" \"}\n            for instructions on how to configure Backrest.\n          </li>\n        </ul>\n        <Divider orientation=\"left\">Tips</Divider>\n        <ul>\n          <li>\n            Backup your Backrest configuration: your Backrest config holds all\n            of your repos, plans, and the passwords to decrypt them. When you\n            have Backrest configured to your liking make sure to store a copy of\n            your config (or minimally a copy of your passwords) in a safe\n            location e.g. a secure note in your password manager.\n          </li>\n          <li>\n            Configure hooks: Backrest can deliver notifications about backup\n            events. It's strongly recommended that you configure an on error\n            hook that will notify you in the event that backups start failing\n            (e.g. an issue with storage or network connectivity). Hooks can be\n            configured either at the plan or repo level.\n          </li>\n        </ul>\n        {isDevBuild && (\n          <>\n            <Divider orientation=\"left\">Config View</Divider>\n            <Collapse\n              size=\"small\"\n              items={[\n                {\n                  key: \"1\",\n                  label: \"Config JSON hidden for security\",\n                  children: config ? (\n                    <Typography>\n                      <pre>\n                        {toJsonString(ConfigSchema, config, {\n                          prettySpaces: 2,\n                        })}\n                      </pre>\n                    </Typography>\n                  ) : (\n                    <Spin />\n                  ),\n                },\n              ]}\n            />\n          </>\n        )}\n      </Typography.Text>\n    </>\n  );\n};\n","\"use client\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { devUseWarning } from '../_util/warning';\nimport { useComponentConfig } from '../config-provider/context';\nimport useSize from '../config-provider/hooks/useSize';\nimport useStyle from './style';\nconst sizeClassNameMap = {\n  small: 'sm',\n  middle: 'md'\n};\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction,\n    className: dividerClassName,\n    style: dividerStyle\n  } = useComponentConfig('divider');\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      variant = 'solid',\n      plain,\n      style,\n      size: customSize\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"variant\", \"plain\", \"style\", \"size\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapCSSVar, hashId, cssVarCls] = useStyle(prefixCls);\n  const sizeFullName = useSize(customSize);\n  const sizeCls = sizeClassNameMap[sizeFullName];\n  const hasChildren = !!children;\n  const mergedOrientation = React.useMemo(() => {\n    if (orientation === 'left') {\n      return direction === 'rtl' ? 'end' : 'start';\n    }\n    if (orientation === 'right') {\n      return direction === 'rtl' ? 'start' : 'end';\n    }\n    return orientation;\n  }, [direction, orientation]);\n  const hasMarginStart = mergedOrientation === 'start' && orientationMargin != null;\n  const hasMarginEnd = mergedOrientation === 'end' && orientationMargin != null;\n  const classString = classNames(prefixCls, dividerClassName, hashId, cssVarCls, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text-${mergedOrientation}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-${variant}`]: variant !== 'solid',\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-start`]: hasMarginStart,\n    [`${prefixCls}-no-default-orientation-margin-end`]: hasMarginEnd,\n    [`${prefixCls}-${sizeCls}`]: !!sizeCls\n  }, className, rootClassName);\n  const memoizedOrientationMargin = React.useMemo(() => {\n    if (typeof orientationMargin === 'number') {\n      return orientationMargin;\n    }\n    if (/^\\d+$/.test(orientationMargin)) {\n      return Number(orientationMargin);\n    }\n    return orientationMargin;\n  }, [orientationMargin]);\n  const innerStyle = {\n    marginInlineStart: hasMarginStart ? memoizedOrientationMargin : undefined,\n    marginInlineEnd: hasMarginEnd ? memoizedOrientationMargin : undefined\n  };\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    const warning = devUseWarning('Divider');\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'usage', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapCSSVar(/*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString,\n    style: Object.assign(Object.assign({}, dividerStyle), style)\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && (/*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","import { unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genStyleHooks, mergeToken } from '../../theme/internal';\n// ============================== Size ================================\nconst genSizeDividerStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-horizontal': {\n        [`&${componentCls}`]: {\n          '&-sm': {\n            marginBlock: token.marginXS\n          },\n          '&-md': {\n            marginBlock: token.margin\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth,\n    textPaddingInline,\n    orientationMargin,\n    verticalMarginInline\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${unit(lineWidth)} solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        marginInline: verticalMarginInline,\n        marginBlock: 0,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${unit(lineWidth)} solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        // Fix https://github.com/ant-design/ant-design/issues/10914\n        margin: `${unit(token.marginLG)} 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${unit(token.dividerHorizontalWithTextGutterMargin)} 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${unit(lineWidth)} solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-start`]: {\n        '&::before': {\n          width: `calc(${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-end`]: {\n        '&::before': {\n          width: `calc(100% - ${orientationMargin} * 100%)`\n        },\n        '&::after': {\n          width: `calc(${orientationMargin} * 100%)`\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        paddingBlock: 0,\n        paddingInline: textPaddingInline\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      '&-dotted': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dotted',\n        borderWidth: `${unit(lineWidth)} 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dotted`]: {\n        '&::before, &::after': {\n          borderStyle: 'dotted none none'\n        }\n      },\n      [`&-vertical${componentCls}-dotted`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-start${componentCls}-no-default-orientation-margin-start`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-end${componentCls}-no-default-orientation-margin-end`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\nexport const prepareComponentToken = token => ({\n  textPaddingInline: '1em',\n  orientationMargin: 0.05,\n  verticalMarginInline: token.marginXS\n});\n// ============================== Export ==============================\nexport default genStyleHooks('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    sizePaddingEdgeHorizontal: 0\n  });\n  return [genSharedDividerStyle(dividerToken), genSizeDividerStyle(dividerToken)];\n}, prepareComponentToken, {\n  unitless: {\n    orientationMargin: true\n  }\n});"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","parcelRequire","$parcel$global","globalThis","parcelRegister","register","module","exports","$69ab34cb3d532cd9$export$f29728e89ea0a4d3","$ayMG0","$bAJM4","$66M8G","$3liF5","$93lJr","$1VQWV","$6Os56","$3xSyo","$7nu3T","config","useConfig","jsx","Fragment","children","jsxs","default","Text","href","target","orientation","isDevBuild","size","items","key","label","toJsonString","ConfigSchema","prettySpaces","$4728a501f42302e5$export$2e2bcd8739ae039","$acw62","$8g1PZ","$dRTnM","$IFe7R","$ar1xc","$4728a501f42302e5$var$__rest","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","$4728a501f42302e5$var$sizeClassNameMap","small","middle","props","getPrefixCls","direction","className","dividerClassName","style","dividerStyle","useComponentConfig","prefixCls","customizePrefixCls","type","orientationMargin","rootClassName","dashed","variant","plain","customSize","restProps","wrapCSSVar","hashId","cssVarCls","sizeCls","hasChildren","mergedOrientation","useMemo","hasMarginStart","hasMarginEnd","classString","a","__esModule","memoizedOrientationMargin","test","Number","createElement","assign","role","marginInlineStart","undefined","marginInlineEnd","$798d9db240249fbb$export$2e2bcd8739ae039","$3i86m","$670jt","$1kAJu","$1nWFx","genStyleHooks","token","dividerToken","mergeToken","dividerHorizontalWithTextGutterMargin","margin","sizePaddingEdgeHorizontal","$798d9db240249fbb$var$genSharedDividerStyle","componentCls","colorSplit","lineWidth","textPaddingInline","verticalMarginInline","resetComponent","borderBlockStart","unit","position","top","display","height","marginInline","marginBlock","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","marginLG","alignItems","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","paddingBlock","paddingInline","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","$798d9db240249fbb$var$genSizeDividerStyle","marginXS","unitless"],"version":3,"file":"GettingStartedGuide.8a6b5014.js.map"}